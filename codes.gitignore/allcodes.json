{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vaults_keyvault77909_name": {
            "defaultValue": "keyvault77909",
            "type": "String"
        },
        "virtualMachines_adminserver_name": {
            "defaultValue": "adminserver",
            "type": "String"
        },
        "virtualNetworks_vnet_subnet1_name": {
            "defaultValue": "vnet-subnet1",
            "type": "String"
        },
        "virtualNetworks_vnet_subnet2_name": {
            "defaultValue": "vnet-subnet2",
            "type": "String"
        },
        "virtualMachines_web_app_server7_name": {
            "defaultValue": "web-app-server7",
            "type": "String"
        },
        "privateEndpoints_web_app_server_name": {
            "defaultValue": "web-app-server",
            "type": "String"
        },
        "vaults_defaultVault650_name": {
            "defaultValue": "defaultVault650",
            "type": "String"
        },
        "publicIPAddresses_adminserver_ip_name": {
            "defaultValue": "adminserver-ip",
            "type": "String"
        },
        "sshPublicKeys_web_app_server7_key_name": {
            "defaultValue": "web-app-server7_key",
            "type": "String"
        },
        "networkInterfaces_adminserver615_z2_name": {
            "defaultValue": "adminserver615_z2",
            "type": "String"
        },
        "publicIPAddresses_web_app_server7_ip_name": {
            "defaultValue": "web-app-server7-ip",
            "type": "String"
        },
        "networkSecurityGroups_adminserver_nsg_name": {
            "defaultValue": "adminserver-nsg",
            "type": "String"
        },
        "networkInterfaces_web_app_server7973_z2_name": {
            "defaultValue": "web-app-server7973_z2",
            "type": "String"
        },
        "diskEncryptionSets_encryptionset_project_name": {
            "defaultValue": "encryptionset-project",
            "type": "String"
        },
        "storageAccounts_projectstorageaccount799_name": {
            "defaultValue": "projectstorageaccount799",
            "type": "String"
        },
        "networkSecurityGroups_web_app_server7_nsg_name": {
            "defaultValue": "web-app-server7-nsg",
            "type": "String"
        },
        "userAssignedIdentities_identity566_name": {
            "defaultValue": "identity566",
            "type": "String"
        },
        "vaults_RecoveryServiceVault_appServer_name": {
            "defaultValue": "RecoveryServiceVault-appServer",
            "type": "String"
        },
        "privateDnsZones_privatelink_blob_core_windows_net_name": {
            "defaultValue": "privatelink.blob.core.windows.net",
            "type": "String"
        },
        "networkInterfaces_web_app_server_nic_3075d517_3b72_4414_92cc_0b51f56cdfdd_name": {
            "defaultValue": "web-app-server.nic.3075d517-3b72-4414-92cc-0b51f56cdfdd",
            "type": "String"
        },
        "storageAccounts_projectstorageaccount7_externalid": {
            "defaultValue": "/subscriptions/88ad0edb-f4f4-4dda-8d16-c6d5c372bef3/resourceGroups/project/providers/Microsoft.Storage/storageAccounts/projectstorageaccount7",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Compute/sshPublicKeys",
            "apiVersion": "2021-11-01",
            "name": "[parameters('sshPublicKeys_web_app_server7_key_name')]",
            "location": "westeurope",
            "tags": {
                "project": "web-app-server"
            },
            "properties": {
                "publicKey": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCi8owcP7vRCW5vI5gjuhrgeiTz\r\nPtI7/vwGOcurOQVJGvrNnILObH4KwSKpRES5Qzdx376k+2u1igo7duB+h33tCA+p\r\n2qQF77qwj6j1MeRLJc2IQ8Hp35xRz2N2mn4nRAbgfAPu85Jr6KVnQ1d+Y/KkdRPL\r\nYFhmitMcxVEWt2JQujmA9zVhVG3bUjPfW3Yzh/NrcZvvX+fHft/XTSv8r0DBVQa1\r\nRpD+wh0TzZ2hRx4p5T/WsKO1suE3VRWr2EL8VQbmiVWlYDNcwrMi2LXU0lN825An\r\nAYmX7z0a7ATR5KPyPTPu9S1yxCo/cx5AUpwtjZVceqVaVL930bQCZbzN7GboX1Ow\r\nBiD7FeJiUSbZWAwYQt7W1ZWAVIwap/pocUQk67k+6/Q0XUqcf1NQNKiVJTk+7pq9\r\np/8qBuRz1jOTm1xWEDw9+IFD7YxWljP/BjHXE/lFh4h7ih7HuaAtoO8PvlKpnw2Y\r\nGGrMBrNFCJCXQ6UL5+KREi68U4IZYN/OTTTw6sU= generated-by-azure\r\n"
            }
        },
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "apiVersion": "2018-11-30",
            "name": "[parameters('userAssignedIdentities_identity566_name')]",
            "location": "westeurope"
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-11-01",
            "name": "[parameters('networkSecurityGroups_adminserver_nsg_name')]",
            "location": "westeurope",
            "tags": {
                "project": "adminserver"
            },
            "properties": {
                "securityRules": [
                    {
                        "name": "RDP",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 300,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-11-01",
            "name": "[parameters('networkSecurityGroups_web_app_server7_nsg_name')]",
            "location": "westeurope",
            "tags": {
                "project": "web-app-server"
            },
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 300,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "HTTP",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 320,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2018-09-01",
            "name": "[parameters('privateDnsZones_privatelink_blob_core_windows_net_name')]",
            "location": "global",
            "properties": {
                "maxNumberOfRecordSets": 25000,
                "maxNumberOfVirtualNetworkLinks": 1000,
                "maxNumberOfVirtualNetworkLinksWithRegistration": 100,
                "numberOfRecordSets": 2,
                "numberOfVirtualNetworkLinks": 1,
                "numberOfVirtualNetworkLinksWithRegistration": 0,
                "provisioningState": "Succeeded"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-11-01",
            "name": "[parameters('publicIPAddresses_adminserver_ip_name')]",
            "location": "westeurope",
            "tags": {
                "project": "adminserver"
            },
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "zones": [
                "2"
            ],
            "properties": {
                "ipAddress": "20.56.178.249",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-11-01",
            "name": "[parameters('publicIPAddresses_web_app_server7_ip_name')]",
            "location": "westeurope",
            "tags": {
                "project": "web-app-server"
            },
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "zones": [
                "2"
            ],
            "properties": {
                "ipAddress": "52.142.226.251",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.RecoveryServices/vaults",
            "apiVersion": "2021-11-01-preview",
            "name": "[parameters('vaults_defaultVault650_name')]",
            "location": "westeurope",
            "tags": {
                "project": "web-app-server"
            },
            "sku": {
                "name": "RS0",
                "tier": "Standard"
            },
            "properties": {}
        },
        {
            "type": "Microsoft.RecoveryServices/vaults",
            "apiVersion": "2021-11-01-preview",
            "name": "[parameters('vaults_RecoveryServiceVault_appServer_name')]",
            "location": "westeurope",
            "tags": {
                "project": "web-appServer"
            },
            "sku": {
                "name": "RS0",
                "tier": "Standard"
            },
            "properties": {}
        },
        {
            "type": "Microsoft.Compute/diskEncryptionSets",
            "apiVersion": "2021-08-01",
            "name": "[parameters('diskEncryptionSets_encryptionset_project_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_keyvault77909_name'))]"
            ],
            "tags": {
                "project": "encryptionSet"
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "activeKey": {
                    "sourceVault": {
                        "id": "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_keyvault77909_name'))]"
                    },
                    "keyUrl": "https://keyvault77909.vault.azure.net/keys/encryptionDisckey/ca3e86a4045f436dbbf76749d2c85ac9"
                },
                "encryptionType": "EncryptionAtRestWithCustomerKey",
                "rotationToLatestKeyVersionEnabled": true
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2021-11-01",
            "name": "[parameters('virtualMachines_web_app_server7_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_web_app_server7973_z2_name'))]"
            ],
            "tags": {
                "project": "web-app-server"
            },
            "zones": [
                "2"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_B1s"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "canonical",
                        "offer": "0001-com-ubuntu-server-focal",
                        "sku": "20_04-lts-gen2",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "name": "[concat(parameters('virtualMachines_web_app_server7_name'), '_OsDisk_1_3b1b4e5a43ac4ce2a503b07082a803eb')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_web_app_server7_name'), '_OsDisk_1_3b1b4e5a43ac4ce2a503b07082a803eb'))]"
                        },
                        "deleteOption": "Delete"
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_web_app_server7_name')]",
                    "adminUsername": "azureuser",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "/home/azureuser/.ssh/authorized_keys",
                                    "keyData": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCi8owcP7vRCW5vI5gjuhrgeiTz\r\nPtI7/vwGOcurOQVJGvrNnILObH4KwSKpRES5Qzdx376k+2u1igo7duB+h33tCA+p\r\n2qQF77qwj6j1MeRLJc2IQ8Hp35xRz2N2mn4nRAbgfAPu85Jr6KVnQ1d+Y/KkdRPL\r\nYFhmitMcxVEWt2JQujmA9zVhVG3bUjPfW3Yzh/NrcZvvX+fHft/XTSv8r0DBVQa1\r\nRpD+wh0TzZ2hRx4p5T/WsKO1suE3VRWr2EL8VQbmiVWlYDNcwrMi2LXU0lN825An\r\nAYmX7z0a7ATR5KPyPTPu9S1yxCo/cx5AUpwtjZVceqVaVL930bQCZbzN7GboX1Ow\r\nBiD7FeJiUSbZWAwYQt7W1ZWAVIwap/pocUQk67k+6/Q0XUqcf1NQNKiVJTk+7pq9\r\np/8qBuRz1jOTm1xWEDw9+IFD7YxWljP/BjHXE/lFh4h7ih7HuaAtoO8PvlKpnw2Y\r\nGGrMBrNFCJCXQ6UL5+KREi68U4IZYN/OTTTw6sU= generated-by-azure\r\n"
                                }
                            ]
                        },
                        "provisionVMAgent": true,
                        "patchSettings": {
                            "patchMode": "ImageDefault",
                            "assessmentMode": "ImageDefault"
                        }
                    },
                    "secrets": [],
                    "allowExtensionOperations": true,
                    "requireGuestProvisionSignal": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_web_app_server7973_z2_name'))]",
                            "properties": {
                                "deleteOption": "Detach"
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/keys",
            "apiVersion": "2021-11-01-preview",
            "name": "[concat(parameters('vaults_keyvault77909_name'), '/encryptionDisckey')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_keyvault77909_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-11-01",
            "name": "[parameters('networkInterfaces_web_app_server_nic_3075d517_3b72_4414_92cc_0b51f56cdfdd_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_subnet1_name'), 'default')]"
            ],
            "tags": {
                "project": "stg"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "privateEndpointIpConfig.55755e65-cdcf-42da-b636-fbd7478e064c",
                        "properties": {
                            "privateIPAddress": "10.1.0.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_subnet1_name'), 'default')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('networkSecurityGroups_web_app_server7_nsg_name'), '/HTTP')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_web_app_server7_nsg_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "80",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 320,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('networkSecurityGroups_adminserver_nsg_name'), '/RDP')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_adminserver_nsg_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "3389",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 300,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('networkSecurityGroups_web_app_server7_nsg_name'), '/SSH')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_web_app_server7_nsg_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "22",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 300,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_blob_core_windows_net_name'), '/projectstorageaccount7')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_blob_core_windows_net_name'))]"
            ],
            "properties": {
                "ttl": 3600,
                "aRecords": [
                    {
                        "ipv4Address": "10.1.0.4"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/SOA",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_blob_core_windows_net_name'), '/@')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_blob_core_windows_net_name'))]"
            ],
            "properties": {
                "ttl": 3600,
                "soaRecord": {
                    "email": "azureprivatedns-host.microsoft.com",
                    "expireTime": 2419200,
                    "host": "azureprivatedns.net",
                    "minimumTtl": 10,
                    "refreshTime": 3600,
                    "retryTime": 300,
                    "serialNumber": 1
                }
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2020-11-01",
            "name": "[parameters('privateEndpoints_web_app_server_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_subnet1_name'), 'default')]"
            ],
            "tags": {
                "project": "stg"
            },
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[concat(parameters('privateEndpoints_web_app_server_name'), '_21c7720f-6688-41f4-bc39-217fb8ec8011')]",
                        "properties": {
                            "privateLinkServiceId": "[parameters('storageAccounts_projectstorageaccount7_externalid')]",
                            "groupIds": [
                                "blob"
                            ],
                            "privateLinkServiceConnectionState": {
                                "status": "Disconnected",
                                "description": "storage account being deleted",
                                "actionsRequired": "None"
                            }
                        }
                    }
                ],
                "manualPrivateLinkServiceConnections": [],
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_subnet1_name'), 'default')]"
                },
                "customDnsConfigs": []
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-11-01",
            "name": "[parameters('virtualNetworks_vnet_subnet1_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_subnet2_name'))]"
            ],
            "tags": {
                "project": "vnet"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.1.0.0/16",
                        "10.10.10.0/24"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "10.1.0.0/24",
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.KeyVault",
                                    "locations": [
                                        "*"
                                    ]
                                }
                            ],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "virtualNetworkPeerings": [
                    {
                        "name": "project-peering",
                        "properties": {
                            "peeringState": "Connected",
                            "remoteVirtualNetwork": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_subnet2_name'))]"
                            },
                            "allowVirtualNetworkAccess": true,
                            "allowForwardedTraffic": true,
                            "allowGatewayTransit": false,
                            "useRemoteGateways": false,
                            "remoteAddressSpace": {
                                "addressPrefixes": [
                                    "10.2.0.0/16",
                                    "10.20.20.0/24"
                                ]
                            }
                        }
                    }
                ],
                "enableDdosProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-11-01",
            "name": "[parameters('virtualNetworks_vnet_subnet2_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_subnet1_name'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.2.0.0/16",
                        "10.20.20.0/24"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "10.2.0.0/24",
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.KeyVault",
                                    "locations": [
                                        "*"
                                    ]
                                }
                            ],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "virtualNetworkPeerings": [
                    {
                        "name": "project-peering-link",
                        "properties": {
                            "peeringState": "Connected",
                            "remoteVirtualNetwork": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_subnet1_name'))]"
                            },
                            "allowVirtualNetworkAccess": true,
                            "allowForwardedTraffic": true,
                            "allowGatewayTransit": false,
                            "useRemoteGateways": false,
                            "remoteAddressSpace": {
                                "addressPrefixes": [
                                    "10.1.0.0/16",
                                    "10.10.10.0/24"
                                ]
                            }
                        }
                    }
                ],
                "enableDdosProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('virtualNetworks_vnet_subnet1_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_subnet1_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.1.0.0/24",
                "serviceEndpoints": [
                    {
                        "service": "Microsoft.KeyVault",
                        "locations": [
                            "*"
                        ]
                    }
                ],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('virtualNetworks_vnet_subnet2_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_subnet2_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.2.0.0/24",
                "serviceEndpoints": [
                    {
                        "service": "Microsoft.KeyVault",
                        "locations": [
                            "*"
                        ]
                    }
                ],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
            "apiVersion": "2021-08-01",
            "name": "[concat(parameters('vaults_defaultVault650_name'), '/BackupPlan-project')]",
            "dependsOn": [
                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaults_defaultVault650_name'))]"
            ],
            "properties": {
                "backupManagementType": "AzureIaasVM",
                "instantRPDetails": {},
                "schedulePolicy": {
                    "schedulePolicyType": "SimpleSchedulePolicy",
                    "scheduleRunFrequency": "Daily",
                    "scheduleRunTimes": [
                        "2022-02-17T02:00:00Z"
                    ],
                    "scheduleWeeklyFrequency": 0
                },
                "retentionPolicy": {
                    "retentionPolicyType": "LongTermRetentionPolicy",
                    "dailySchedule": {
                        "retentionTimes": [
                            "2022-02-17T02:00:00Z"
                        ],
                        "retentionDuration": {
                            "count": 7,
                            "durationType": "Days"
                        }
                    }
                },
                "instantRpRetentionRangeInDays": 2,
                "timeZone": "W. Europe Standard Time",
                "protectedItemsCount": 0
            }
        },
        {
            "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
            "apiVersion": "2021-08-01",
            "name": "[concat(parameters('vaults_RecoveryServiceVault_appServer_name'), '/Daillybackupappserver')]",
            "dependsOn": [
                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaults_RecoveryServiceVault_appServer_name'))]"
            ],
            "properties": {
                "backupManagementType": "AzureIaasVM",
                "instantRPDetails": {},
                "schedulePolicy": {
                    "schedulePolicyType": "SimpleSchedulePolicy",
                    "scheduleRunFrequency": "Daily",
                    "scheduleRunTimes": [
                        "2022-02-18T01:00:00Z"
                    ],
                    "scheduleWeeklyFrequency": 0
                },
                "retentionPolicy": {
                    "retentionPolicyType": "LongTermRetentionPolicy",
                    "dailySchedule": {
                        "retentionTimes": [
                            "2022-02-18T01:00:00Z"
                        ],
                        "retentionDuration": {
                            "count": 7,
                            "durationType": "Days"
                        }
                    }
                },
                "instantRpRetentionRangeInDays": 2,
                "timeZone": "W. Europe Standard Time",
                "protectedItemsCount": 0
            }
        },
        {
            "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
            "apiVersion": "2021-08-01",
            "name": "[concat(parameters('vaults_defaultVault650_name'), '/DefaultPolicy')]",
            "dependsOn": [
                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaults_defaultVault650_name'))]"
            ],
            "properties": {
                "backupManagementType": "AzureIaasVM",
                "instantRPDetails": {},
                "schedulePolicy": {
                    "schedulePolicyType": "SimpleSchedulePolicy",
                    "scheduleRunFrequency": "Daily",
                    "scheduleRunTimes": [
                        "2022-02-17T20:00:00Z"
                    ],
                    "scheduleWeeklyFrequency": 0
                },
                "retentionPolicy": {
                    "retentionPolicyType": "LongTermRetentionPolicy",
                    "dailySchedule": {
                        "retentionTimes": [
                            "2022-02-17T20:00:00Z"
                        ],
                        "retentionDuration": {
                            "count": 30,
                            "durationType": "Days"
                        }
                    }
                },
                "instantRpRetentionRangeInDays": 2,
                "timeZone": "UTC",
                "protectedItemsCount": 0
            }
        },
        {
            "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
            "apiVersion": "2021-08-01",
            "name": "[concat(parameters('vaults_RecoveryServiceVault_appServer_name'), '/DefaultPolicy')]",
            "dependsOn": [
                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaults_RecoveryServiceVault_appServer_name'))]"
            ],
            "properties": {
                "backupManagementType": "AzureIaasVM",
                "instantRPDetails": {},
                "schedulePolicy": {
                    "schedulePolicyType": "SimpleSchedulePolicy",
                    "scheduleRunFrequency": "Daily",
                    "scheduleRunTimes": [
                        "2022-02-18T00:00:00Z"
                    ],
                    "scheduleWeeklyFrequency": 0
                },
                "retentionPolicy": {
                    "retentionPolicyType": "LongTermRetentionPolicy",
                    "dailySchedule": {
                        "retentionTimes": [
                            "2022-02-18T00:00:00Z"
                        ],
                        "retentionDuration": {
                            "count": 30,
                            "durationType": "Days"
                        }
                    }
                },
                "instantRpRetentionRangeInDays": 2,
                "timeZone": "UTC",
                "protectedItemsCount": 0
            }
        },
        {
            "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
            "apiVersion": "2021-08-01",
            "name": "[concat(parameters('vaults_RecoveryServiceVault_appServer_name'), '/DiallyBackup-aapServerPlan')]",
            "dependsOn": [
                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaults_RecoveryServiceVault_appServer_name'))]"
            ],
            "properties": {
                "backupManagementType": "AzureIaasVM",
                "instantRPDetails": {
                    "azureBackupRGNamePrefix": "project",
                    "azureBackupRGNameSuffix": "appServer"
                },
                "schedulePolicy": {
                    "schedulePolicyType": "SimpleSchedulePolicy",
                    "scheduleRunFrequency": "Daily",
                    "scheduleRunTimes": [
                        "2022-02-17T02:00:00Z"
                    ],
                    "scheduleWeeklyFrequency": 0
                },
                "retentionPolicy": {
                    "retentionPolicyType": "LongTermRetentionPolicy",
                    "dailySchedule": {
                        "retentionTimes": [
                            "2022-02-17T02:00:00Z"
                        ],
                        "retentionDuration": {
                            "count": 7,
                            "durationType": "Days"
                        }
                    }
                },
                "instantRpRetentionRangeInDays": 2,
                "timeZone": "W. Europe Standard Time",
                "protectedItemsCount": 0
            }
        },
        {
            "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
            "apiVersion": "2021-08-01",
            "name": "[concat(parameters('vaults_defaultVault650_name'), '/HourlyLogBackup')]",
            "dependsOn": [
                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaults_defaultVault650_name'))]"
            ],
            "properties": {
                "backupManagementType": "AzureWorkload",
                "workLoadType": "SQLDataBase",
                "settings": {
                    "timeZone": "UTC",
                    "issqlcompression": false,
                    "isCompression": false
                },
                "subProtectionPolicy": [
                    {
                        "policyType": "Full",
                        "schedulePolicy": {
                            "schedulePolicyType": "SimpleSchedulePolicy",
                            "scheduleRunFrequency": "Daily",
                            "scheduleRunTimes": [
                                "2022-02-17T20:00:00Z"
                            ],
                            "scheduleWeeklyFrequency": 0
                        },
                        "retentionPolicy": {
                            "retentionPolicyType": "LongTermRetentionPolicy",
                            "dailySchedule": {
                                "retentionTimes": [
                                    "2022-02-17T20:00:00Z"
                                ],
                                "retentionDuration": {
                                    "count": 30,
                                    "durationType": "Days"
                                }
                            }
                        }
                    },
                    {
                        "policyType": "Log",
                        "schedulePolicy": {
                            "schedulePolicyType": "LogSchedulePolicy",
                            "scheduleFrequencyInMins": 60
                        },
                        "retentionPolicy": {
                            "retentionPolicyType": "SimpleRetentionPolicy",
                            "retentionDuration": {
                                "count": 30,
                                "durationType": "Days"
                            }
                        }
                    }
                ],
                "protectedItemsCount": 0
            }
        },
        {
            "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
            "apiVersion": "2021-08-01",
            "name": "[concat(parameters('vaults_RecoveryServiceVault_appServer_name'), '/HourlyLogBackup')]",
            "dependsOn": [
                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaults_RecoveryServiceVault_appServer_name'))]"
            ],
            "properties": {
                "backupManagementType": "AzureWorkload",
                "workLoadType": "SQLDataBase",
                "settings": {
                    "timeZone": "UTC",
                    "issqlcompression": false,
                    "isCompression": false
                },
                "subProtectionPolicy": [
                    {
                        "policyType": "Full",
                        "schedulePolicy": {
                            "schedulePolicyType": "SimpleSchedulePolicy",
                            "scheduleRunFrequency": "Daily",
                            "scheduleRunTimes": [
                                "2022-02-18T00:00:00Z"
                            ],
                            "scheduleWeeklyFrequency": 0
                        },
                        "retentionPolicy": {
                            "retentionPolicyType": "LongTermRetentionPolicy",
                            "dailySchedule": {
                                "retentionTimes": [
                                    "2022-02-18T00:00:00Z"
                                ],
                                "retentionDuration": {
                                    "count": 30,
                                    "durationType": "Days"
                                }
                            }
                        }
                    },
                    {
                        "policyType": "Log",
                        "schedulePolicy": {
                            "schedulePolicyType": "LogSchedulePolicy",
                            "scheduleFrequencyInMins": 60
                        },
                        "retentionPolicy": {
                            "retentionPolicyType": "SimpleRetentionPolicy",
                            "retentionDuration": {
                                "count": 30,
                                "durationType": "Days"
                            }
                        }
                    }
                ],
                "protectedItemsCount": 0
            }
        },
        {
            "type": "Microsoft.RecoveryServices/vaults/replicationAlertSettings",
            "apiVersion": "2021-08-01",
            "name": "[concat(parameters('vaults_defaultVault650_name'), '/defaultAlertSetting')]",
            "dependsOn": [
                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaults_defaultVault650_name'))]"
            ],
            "properties": {
                "sendToOwners": "DoNotSend",
                "customEmailAddresses": []
            }
        },
        {
            "type": "Microsoft.RecoveryServices/vaults/replicationAlertSettings",
            "apiVersion": "2021-08-01",
            "name": "[concat(parameters('vaults_RecoveryServiceVault_appServer_name'), '/defaultAlertSetting')]",
            "dependsOn": [
                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaults_RecoveryServiceVault_appServer_name'))]"
            ],
            "properties": {
                "sendToOwners": "DoNotSend",
                "customEmailAddresses": []
            }
        },
        {
            "type": "Microsoft.RecoveryServices/vaults/replicationVaultSettings",
            "apiVersion": "2021-08-01",
            "name": "[concat(parameters('vaults_defaultVault650_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaults_defaultVault650_name'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.RecoveryServices/vaults/replicationVaultSettings",
            "apiVersion": "2021-08-01",
            "name": "[concat(parameters('vaults_RecoveryServiceVault_appServer_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaults_RecoveryServiceVault_appServer_name'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-08-01",
            "name": "[parameters('storageAccounts_projectstorageaccount799_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userAssignedIdentities_identity566_name'))]"
            ],
            "tags": {
                "project": "st"
            },
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "/subscriptions/88ad0edb-f4f4-4dda-8d16-c6d5c372bef3/resourceGroups/project/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity566": {
                        "tenantId": "de60b253-74bd-4365-b598-b9e55a2b208d",
                        "identityUrl": "https://control-westeurope.identity.azure.net/subscriptions/88ad0edb-f4f4-4dda-8d16-c6d5c372bef3/resourcegroups/project/providers/Microsoft.Storage/storageAccounts/projectstorageaccount799/credentials/v2/userassigned?arpid=e1b4a33e-a82d-4d6d-9b82-2d23564542e6&uaid=69fde7b4-a3f9-48b7-bdd6-af82d30d75ce&tid=de60b253-74bd-4365-b598-b9e55a2b208d",
                        "certRenewAfter": "2022-04-05T12:19:00Z"
                    }
                }
            },
            "properties": {
                "defaultToOAuthAuthentication": false,
                "allowCrossTenantReplication": true,
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": false,
                "allowSharedKeyAccess": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "identity": {
                        "userAssignedIdentity": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userAssignedIdentities_identity566_name'))]"
                    },
                    "requireInfrastructureEncryption": false,
                    "keyvaultproperties": {
                        "keyvaulturi": "https://keyvault77909.vault.azure.net",
                        "keyname": "encryptionDisckey"
                    },
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "table": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "queue": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Keyvault"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2021-08-01",
            "name": "[concat(parameters('storageAccounts_projectstorageaccount799_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_projectstorageaccount799_name'))]"
            ],
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                },
                "isVersioningEnabled": true,
                "changeFeed": {
                    "retentionInDays": 7,
                    "enabled": true
                },
                "restorePolicy": {
                    "enabled": false
                },
                "containerDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2021-08-01",
            "name": "[concat(parameters('storageAccounts_projectstorageaccount799_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_projectstorageaccount799_name'))]"
            ],
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "properties": {
                "protocolSettings": {
                    "smb": {}
                },
                "cors": {
                    "corsRules": []
                },
                "shareDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "apiVersion": "2021-08-01",
            "name": "[concat(parameters('storageAccounts_projectstorageaccount799_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_projectstorageaccount799_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices",
            "apiVersion": "2021-08-01",
            "name": "[concat(parameters('storageAccounts_projectstorageaccount799_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_projectstorageaccount799_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2021-11-01-preview",
            "name": "[parameters('vaults_keyvault77909_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_subnet1_name'), 'default')]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_subnet2_name'), 'default')]"
            ],
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "Standard"
                },
                "tenantId": "de60b253-74bd-4365-b598-b9e55a2b208d",
                "networkAcls": {
                    "bypass": "AzureServices",
                    "defaultAction": "Allow",
                    "ipRules": [],
                    "virtualNetworkRules": [
                        {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_subnet1_name'), 'default')]",
                            "ignoreMissingVnetServiceEndpoint": false
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_subnet2_name'), 'default')]",
                            "ignoreMissingVnetServiceEndpoint": false
                        }
                    ]
                },
                "accessPolicies": [
                    {
                        "tenantId": "de60b253-74bd-4365-b598-b9e55a2b208d",
                        "objectId": "2ac95fd8-9277-4adb-80c8-af41d0c73dad",
                        "permissions": {
                            "keys": [
                                "Get",
                                "List",
                                "UnwrapKey",
                                "WrapKey"
                            ],
                            "secrets": [],
                            "certificates": []
                        }
                    },
                    {
                        "tenantId": "de60b253-74bd-4365-b598-b9e55a2b208d",
                        "objectId": "0c9e9953-88ce-4c99-ab40-441e61a26060",
                        "permissions": {
                            "keys": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore",
                                "Decrypt",
                                "Encrypt",
                                "UnwrapKey",
                                "WrapKey",
                                "Verify",
                                "Sign",
                                "Purge",
                                "Rotate",
                                "GetRotationPolicy",
                                "SetRotationPolicy"
                            ],
                            "secrets": [
                                "Get",
                                "List",
                                "Set",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore",
                                "Purge"
                            ],
                            "certificates": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore",
                                "ManageContacts",
                                "ManageIssuers",
                                "GetIssuers",
                                "ListIssuers",
                                "SetIssuers",
                                "DeleteIssuers",
                                "Purge"
                            ]
                        }
                    },
                    {
                        "tenantId": "de60b253-74bd-4365-b598-b9e55a2b208d",
                        "objectId": "ee09dadb-e944-4392-a486-562c4d7732c7",
                        "permissions": {
                            "keys": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore",
                                "Decrypt",
                                "Encrypt",
                                "UnwrapKey",
                                "WrapKey",
                                "Verify",
                                "Sign",
                                "Purge",
                                "Rotate",
                                "GetRotationPolicy",
                                "SetRotationPolicy"
                            ],
                            "secrets": [
                                "Get",
                                "List",
                                "Set",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore",
                                "Purge"
                            ],
                            "certificates": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore",
                                "ManageContacts",
                                "ManageIssuers",
                                "GetIssuers",
                                "ListIssuers",
                                "SetIssuers",
                                "DeleteIssuers",
                                "Purge"
                            ]
                        }
                    }
                ],
                "enabledForDeployment": true,
                "enabledForDiskEncryption": true,
                "enabledForTemplateDeployment": true,
                "enableSoftDelete": true,
                "softDeleteRetentionInDays": 90,
                "enableRbacAuthorization": false,
                "enablePurgeProtection": true,
                "vaultUri": "[concat('https://', parameters('vaults_keyvault77909_name'), '.vault.azure.net/')]",
                "provisioningState": "Succeeded",
                "publicNetworkAccess": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_blob_core_windows_net_name'), '/fasysdh5efyos')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_blob_core_windows_net_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_subnet1_name'))]"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_subnet1_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('virtualNetworks_vnet_subnet1_name'), '/project-peering')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_subnet1_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_subnet2_name'))]"
            ],
            "properties": {
                "peeringState": "Connected",
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_subnet2_name'))]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "10.2.0.0/16",
                        "10.20.20.0/24"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('virtualNetworks_vnet_subnet2_name'), '/project-peering-link')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_subnet2_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_subnet1_name'))]"
            ],
            "properties": {
                "peeringState": "Connected",
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_subnet1_name'))]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "10.1.0.0/16",
                        "10.10.10.0/24"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2021-08-01",
            "name": "[concat(parameters('storageAccounts_projectstorageaccount799_name'), '/default/bootdiagnostics-adminserv-154bbc7e-fd70-493d-a76c-a72598a5d213')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_projectstorageaccount799_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_projectstorageaccount799_name'))]"
            ],
            "properties": {
                "immutableStorageWithVersioning": {
                    "enabled": false
                },
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2021-11-01",
            "name": "[parameters('virtualMachines_adminserver_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/diskEncryptionSets', parameters('diskEncryptionSets_encryptionset_project_name'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_adminserver615_z2_name'))]",
                "[resourceId('Microsoft.Storage/StorageAccounts', parameters('storageAccounts_projectstorageaccount799_name'))]"
            ],
            "tags": {
                "project": "adminserver"
            },
            "zones": [
                "2"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_B1s"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2022-datacenter-azure-edition",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "name": "[concat(parameters('virtualMachines_adminserver_name'), '_OsDisk_1_ebe6642378ee4466882a001aa8293e10')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "diskEncryptionSet": {
                                "id": "[resourceId('Microsoft.Compute/diskEncryptionSets', parameters('diskEncryptionSets_encryptionset_project_name'))]"
                            },
                            "storageAccountType": "Premium_LRS",
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_adminserver_name'), '_OsDisk_1_ebe6642378ee4466882a001aa8293e10'))]"
                        },
                        "deleteOption": "Delete",
                        "diskSizeGB": 127
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_adminserver_name')]",
                    "adminUsername": "aziza",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true,
                        "patchSettings": {
                            "patchMode": "AutomaticByOS",
                            "assessmentMode": "ImageDefault",
                            "enableHotpatching": false
                        }
                    },
                    "secrets": [],
                    "allowExtensionOperations": true,
                    "requireGuestProvisionSignal": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_adminserver615_z2_name'))]",
                            "properties": {
                                "deleteOption": "Detach"
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https://', parameters('storageAccounts_projectstorageaccount799_name'), '.blob.core.windows.net/')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-11-01",
            "name": "[parameters('networkInterfaces_adminserver615_z2_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_adminserver_ip_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_subnet2_name'), 'default')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_adminserver_nsg_name'))]"
            ],
            "tags": {
                "project": "adminserver"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "10.2.0.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_adminserver_ip_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_subnet2_name'), 'default')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_adminserver_nsg_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-11-01",
            "name": "[parameters('networkInterfaces_web_app_server7973_z2_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_web_app_server7_ip_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_subnet1_name'), 'default')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_web_app_server7_nsg_name'))]"
            ],
            "tags": {
                "project": "web-app-server"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "10.1.0.5",
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_web_app_server7_ip_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_subnet1_name'), 'default')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_web_app_server7_nsg_name'))]"
                }
            }
        }
    ]
}
